package service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class InitDatabaseHelper {

   public static Connection initDB() throws SQLException {
      // łączenie się z bazą
      Connection conn = DriverManager.getConnection("jdbc:hsqldb:file:/tmp/testdb;ifexists=false", "SA", "");
      Statement statement = conn.createStatement();
      // sprawdzanie, czy istnieją poszczególne tabele 
      ResultSet rs = conn.getMetaData().getTables(null, null, null, null);
      boolean placeExists = false, tournamentExists = false, playerExists = false, p_tExists = false;
      while (rs.next()) {// sprawdza czy poszczegolne tabele istnieja
         if ("Place".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
            placeExists = true;
         }
         if ("Tournament".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
            tournamentExists = true;
         }
         if ("Player".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
            playerExists = true;
         }
         if ("Player_tournament".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
            p_tExists = true;
         }
      }
      // tworzymy tabele, jeśli nie istnieją
      if (!playerExists)
         statement.executeUpdate(//
         "CREATE TABLE Player(" + //
               "id bigint GENERATED BY DEFAULT AS IDENTITY," + //
               "nick varchar(20)," + //
               "country varchar(20)," + //
               "ranking integer," + //
               "earned_money double," + //
               "wins_count integer," + //
               "UNIQUE(id)" + //
               ")");
      if (!placeExists)
         statement.executeUpdate(//
         "CREATE TABLE Place(" + //
               "id bigint GENERATED BY DEFAULT AS IDENTITY," + //
               "country varchar(30)," + //
               "city varchar(30)," + //
               "name varchar(30)," + //
               "UNIQUE(id)" + //
               ")");
      if (!tournamentExists)
         statement.executeUpdate(//
         "CREATE TABLE Tournament(" + //
               "id bigint GENERATED BY DEFAULT AS IDENTITY," + //
               "entry_fee double," + //
               "win double," + //
               "place_id bigint," + //
               "UNIQUE(id)," + //
               "FOREIGN KEY (place_id) REFERENCES Place(id)" + //
               ")");
      if (!p_tExists)
         statement.executeUpdate(//
         "CREATE TABLE Player_tournament(" + //
               "id bigint GENERATED BY DEFAULT AS IDENTITY," + //
               "player_id bigint," + //
               "tournament_id bigint," + //
               "UNIQUE(id)," + //
               "FOREIGN KEY (player_id) REFERENCES Player(id)," + //
               "FOREIGN KEY (tournament_id) REFERENCES Tournament(id)" + //
               ")");
      return conn; //zwraca polaczenie do bazy danych
   }
}
